'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
class Walker {
    constructor(order) {
        this.order = order;
        this.stack = [];
    }
    visit(node, callback) {
        if (!node) {
            return;
        }
        this.stack.push(node);
        if (this.order === 'post') {
            this.children(node, callback);
            callback(node, this);
        } else {
            callback(node, this);
            this.children(node, callback);
        }
        this.stack.pop();
    }
    children(node, callback) {
        let visitor = visitors[node.type];
        if (visitor) {
            visitor(this, node, callback);
        }
    }
}
exports.default = Walker;
let visitors = {
    Program(walker, node, callback) {
        for (let i = 0; i < node.body.length; i++) {
            walker.visit(node.body[i], callback);
        }
    },
    ElementNode(walker, node, callback) {
        for (let i = 0; i < node.children.length; i++) {
            walker.visit(node.children[i], callback);
        }
    },
    BlockStatement(walker, node, callback) {
        walker.visit(node.program, callback);
        walker.visit(node.inverse || null, callback);
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Fsa2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvQGdsaW1tZXIvc3ludGF4L2xpYi90cmF2ZXJzYWwvd2Fsa2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztnQkFPcUIsQUFBVyxPQUFYO2FBQUssUUFEakIsQUFDWSxBQUFLLEFBQU07YUFEbEIsUUFBVSxBQUFFLEFBQUMsQUFDUSxBQUFDO0FBRWxDLEFBQUs7VUFBcUIsQUFBZSxNQUFFLEFBQXlCLFVBQ2xFLEFBQUUsQUFBQztZQUFDLENBQUMsQUFBSSxBQUFDLE1BQUMsQUFBQyxBQUNWLEFBQU0sQUFBQyxBQUNUO0FBQUM7QUFFRCxBQUFJO2FBQUMsQUFBSyxNQUFDLEFBQUksS0FBQyxBQUFJLEFBQUMsQUFBQyxBQUV0QixBQUFFLEFBQUM7WUFBQyxBQUFJLEtBQUMsQUFBSyxVQUFLLEFBQU0sQUFBQyxRQUFDLEFBQUMsQUFDMUIsQUFBSTtpQkFBQyxBQUFRLFNBQUMsQUFBSSxNQUFFLEFBQVEsQUFBQyxBQUFDLEFBQzlCLEFBQVE7cUJBQUMsQUFBSSxNQUFFLEFBQUksQUFBQyxBQUFDLEFBQ3ZCLEFBQUMsQUFBQyxBQUFJO2VBQUMsQUFBQyxBQUNOLEFBQVE7cUJBQUMsQUFBSSxNQUFFLEFBQUksQUFBQyxBQUFDLEFBQ3JCLEFBQUk7aUJBQUMsQUFBUSxTQUFDLEFBQUksTUFBRSxBQUFRLEFBQUMsQUFBQyxBQUNoQyxBQUFDO0FBRUQsQUFBSTthQUFDLEFBQUssTUFBQyxBQUFHLEFBQUUsQUFBQyxBQUNuQixBQUFDO0FBRUQsQUFBUTthQUFDLEFBQVMsTUFBRSxBQUFhLFVBQy9CO1lBQUksQUFBTyxVQUFHLEFBQVEsU0FBQyxBQUFJLEtBQUMsQUFBSSxBQUFDLEFBQUMsQUFDbEMsQUFBRSxBQUFDO1lBQUMsQUFBTyxBQUFDLFNBQUMsQUFBQyxBQUNaLEFBQU87b0JBQUMsQUFBSSxNQUFFLEFBQUksTUFBRSxBQUFRLEFBQUMsQUFBQyxBQUNoQyxBQUFDLEFBQ0g7QUFBQyxBQUNGOztBQTFCQzs7QUE0QkYsSUFBSSxBQUFRO1lBQ0YsQUFBYyxRQUFFLEFBQWlCLE1BQUUsQUFBZ0MsVUFDekUsQUFBRyxBQUFDO2FBQUMsSUFBSSxBQUFDLElBQUcsQUFBQyxHQUFFLEFBQUMsSUFBRyxBQUFJLEtBQUMsQUFBSSxLQUFDLEFBQU0sUUFBRSxBQUFDLEFBQUUsS0FBRSxBQUFDLEFBQzFDLEFBQU07bUJBQUMsQUFBSyxNQUFDLEFBQUksS0FBQyxBQUFJLEtBQUMsQUFBQyxBQUFDLElBQUUsQUFBUSxBQUFDLEFBQUMsQUFDdkMsQUFBQyxBQUNIO0FBQUM7QUFFRCxBQUFXO2dCQUFDLEFBQWMsUUFBRSxBQUFxQixNQUFFLEFBQWdDLFVBQ2pGLEFBQUcsQUFBQzthQUFDLElBQUksQUFBQyxJQUFHLEFBQUMsR0FBRSxBQUFDLElBQUcsQUFBSSxLQUFDLEFBQVEsU0FBQyxBQUFNLFFBQUUsQUFBQyxBQUFFLEtBQUUsQUFBQyxBQUM5QyxBQUFNO21CQUFDLEFBQUssTUFBQyxBQUFJLEtBQUMsQUFBUSxTQUFDLEFBQUMsQUFBQyxJQUFFLEFBQVEsQUFBQyxBQUFDLEFBQzNDLEFBQUMsQUFDSDtBQUFDO0FBRUQsQUFBYzttQkFBQyxBQUFjLFFBQUUsQUFBd0IsTUFBRSxBQUFtQyxVQUMxRixBQUFNO2VBQUMsQUFBSyxNQUFDLEFBQUksS0FBQyxBQUFPLFNBQUUsQUFBUSxBQUFDLEFBQUMsQUFDckMsQUFBTTtlQUFDLEFBQUssTUFBQyxBQUFJLEtBQUMsQUFBTyxXQUFJLEFBQUksTUFBRSxBQUFRLEFBQUMsQUFBQyxBQUMvQyxBQUFDLEFBQ0YsQUFBQztBQWpCYTtBQUNiLEFBQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPcHRpb24gfSBmcm9tIFwiQGdsaW1tZXIvaW50ZXJmYWNlc1wiO1xuaW1wb3J0ICogYXMgQVNUIGZyb20gJy4uL3R5cGVzL25vZGVzJztcblxuZXhwb3J0IHR5cGUgTm9kZUNhbGxiYWNrPE4gZXh0ZW5kcyBBU1QuTm9kZT4gPSAobm9kZTogTiwgd2Fsa2VyOiBXYWxrZXIpID0+IHZvaWQ7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdhbGtlciB7XG4gIHB1YmxpYyBzdGFjazogYW55W10gPSBbXTtcbiAgY29uc3RydWN0b3IocHVibGljIG9yZGVyPzogYW55KSB7fVxuXG4gIHZpc2l0PE4gZXh0ZW5kcyBBU1QuTm9kZT4obm9kZTogT3B0aW9uPE4+LCBjYWxsYmFjazogTm9kZUNhbGxiYWNrPE4+KSB7XG4gICAgaWYgKCFub2RlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5zdGFjay5wdXNoKG5vZGUpO1xuXG4gICAgaWYgKHRoaXMub3JkZXIgPT09ICdwb3N0Jykge1xuICAgICAgdGhpcy5jaGlsZHJlbihub2RlLCBjYWxsYmFjayk7XG4gICAgICBjYWxsYmFjayhub2RlLCB0aGlzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2FsbGJhY2sobm9kZSwgdGhpcyk7XG4gICAgICB0aGlzLmNoaWxkcmVuKG5vZGUsIGNhbGxiYWNrKTtcbiAgICB9XG5cbiAgICB0aGlzLnN0YWNrLnBvcCgpO1xuICB9XG5cbiAgY2hpbGRyZW4obm9kZTogYW55LCBjYWxsYmFjazogYW55KSB7XG4gICAgbGV0IHZpc2l0b3IgPSB2aXNpdG9yc1tub2RlLnR5cGVdO1xuICAgIGlmICh2aXNpdG9yKSB7XG4gICAgICB2aXNpdG9yKHRoaXMsIG5vZGUsIGNhbGxiYWNrKTtcbiAgICB9XG4gIH1cbn1cblxubGV0IHZpc2l0b3JzID0ge1xuICBQcm9ncmFtKHdhbGtlcjogV2Fsa2VyLCBub2RlOiBBU1QuUHJvZ3JhbSwgY2FsbGJhY2s6IE5vZGVDYWxsYmFjazxBU1QuTm9kZT4pIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGUuYm9keS5sZW5ndGg7IGkrKykge1xuICAgICAgd2Fsa2VyLnZpc2l0KG5vZGUuYm9keVtpXSwgY2FsbGJhY2spO1xuICAgIH1cbiAgfSxcblxuICBFbGVtZW50Tm9kZSh3YWxrZXI6IFdhbGtlciwgbm9kZTogQVNULkVsZW1lbnROb2RlLCBjYWxsYmFjazogTm9kZUNhbGxiYWNrPEFTVC5Ob2RlPikge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbm9kZS5jaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgd2Fsa2VyLnZpc2l0KG5vZGUuY2hpbGRyZW5baV0sIGNhbGxiYWNrKTtcbiAgICB9XG4gIH0sXG5cbiAgQmxvY2tTdGF0ZW1lbnQod2Fsa2VyOiBXYWxrZXIsIG5vZGU6IEFTVC5CbG9ja1N0YXRlbWVudCwgY2FsbGJhY2s6IE5vZGVDYWxsYmFjazxBU1QuUHJvZ3JhbT4pIHtcbiAgICB3YWxrZXIudmlzaXQobm9kZS5wcm9ncmFtLCBjYWxsYmFjayk7XG4gICAgd2Fsa2VyLnZpc2l0KG5vZGUuaW52ZXJzZSB8fCBudWxsLCBjYWxsYmFjayk7XG4gIH1cbn07XG4iXX0=